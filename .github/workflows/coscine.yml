name: Deploy Coscine Static Site to GitHub Pages

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: ${{ vars.COSCINE_PROJECT_NAME }}
      COSCINE_API_TOKEN: ${{ vars.COSCINE_API_TOKEN }}
    steps:
      - name: Check Python version
        run: python -V

      - name: Install git
        run: sudo apt install -y git

      - name: Clone repository
        run: git clone https://git.rwth-aachen.de/coscine/community-features/coscine-static-site-generator.git

      - name: Install requirements
        working-directory: ./coscine-static-site-generator/
        run: pip install -r requirements.txt

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy webpage
        run: |
          pwd
          mkdir -p public/
          dir
          cp index.html public/
          cp style.css public/
          cp coscine_logo.gif public/

      - name: Build static site and generate navigation tabs
        working-directory: ./coscine-static-site-generator/
        run: |
          RESOURCE_NAMES=("DhakanDB_2019" "BommanaS_2023" "BackhedF_2015" "ChngKR_2016" "DeFilippisF_2019" "BaruchEN_2021" "ContevilleLC_2019" "FanY_2023" "BritoIL_2016" "BoktorJC_2023" "CosteaPI_2017" "DavidLA_2015" "Bengtsson-PalmeJ_2015" "AverinaOV_2020" "FerrettiP_2018" "AsnicarF_2017" "DavarD_2021" "ChuDM_2017" "BedarfJR_2017" "BaiX_2021" "Castro-NallarE_2015" "AsnicarF_2021" "FengQ_2015" "ChengpingW_2017" "ArtachoA_2021" "BrooksB_2017")
          
          # Generate static site for each resource
          for RESOURCE in "${RESOURCE_NAMES[@]}"; do
            echo "Processing resource: $RESOURCE"
            mkdir -p ../public/$RESOURCE
            python -m src -t "$COSCINE_API_TOKEN" -p "$PROJECT_NAME" -r "$RESOURCE" -y -o ../public/"$RESOURCE"
          done
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
