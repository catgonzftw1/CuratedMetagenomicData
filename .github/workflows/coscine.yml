# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Coscine Static Site to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run every day at 8 am UTC
    - cron:  '0 8 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        resource-name: 
          - DhakanDB_2019
          - BommanaS_2023
          - BackhedF_2015
          - ChngKR_2016
          - DeFilippisF_2019
          - BaruchEN_2021
          - ContevilleLC_2019
          - FanY_2023
          - BritoIL_2016
          - BoktorJC_2023
          - CosteaPI_2017
          - DavidLA_2015
          - Bengtsson-PalmeJ_2015
          - AverinaOV_2020
          - FerrettiP_2018
          - AsnicarF_2017
          - DavarD_2021
          - ChuDM_2017
          - BedarfJR_2017
          - BaiX_2021
          - Castro-NallarE_2015
          - AsnicarF_2021
          - FengQ_2015
          - ChengpingW_2017
          - ArtachoA_2021
          - BrooksB_2017
    env:
      PROJECT_NAME: ${{ vars.COSCINE_PROJECT_NAME }}
      RESOURCE_NAME: ${{ matrix.resource-name }}  # Use the current resource from the matrix
      COSCINE_API_TOKEN: ${{ vars.COSCINE_API_TOKEN }}
    steps:
      - run: python -V
      - run: sudo apt install -y git
      - run: git clone https://git.rwth-aachen.de/coscine/community-features/coscine-static-site-generator.git
      
      # Create public directory if it doesn't exist
      - name: Create public directory
        run: mkdir -p ./public     
      
      - name: Install requirements
        working-directory: ./coscine-static-site-generator/
        run: pip install -r requirements.txt
        
      - name: Build static site
        working-directory: ./coscine-static-site-generator/
        run: python -m src -t "$COSCINE_API_TOKEN" -p "$PROJECT_NAME" -r "$RESOURCE_NAME" -y -o ../public/${{ matrix.resource-name }}
      
      # Debugging step to list contents of public directory.
      - name: List public directory contents
        run: ls -R ../public

      # Check if there are any files in public before uploading.
      - name: Check if public directory has content
        run: |
          if [ "$(ls -A ../public)" ]; then
            echo "Public directory has content."
          else
            echo "Public directory is empty."
            exit 1  # Exit with an error code if empty.
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public/**

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
